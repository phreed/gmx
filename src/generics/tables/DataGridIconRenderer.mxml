<?xml version="1.0" encoding="utf-8"?>
<!--
/*
 *      Copyright (c) Vanderbilt University, 2006-2009
 *      ALL RIGHTS RESERVED, UNLESS OTHERWISE STATED
 *
 *      Developed under contract for Future Combat Systems (FCS)
 *      by the Institute for Software Integrated Systems, Vanderbilt Univ.
 *
 *      Export Controlled:  Not Releasable to a Foreign Person or
 *      Representative of a Foreign Interest
 *
 *      GOVERNMENT PURPOSE RIGHTS:
 *      The Government is granted Government Purpose Rights to this
 *      Data or Software.  Use, duplication, or disclosure is subject
 *      to the restrictions as stated in Agreement DAAE07-03-9-F001
 *      between The Boeing Company and the Government.
 *
 *      Vanderbilt University disclaims all warranties with regard to this
 *      software, including all implied warranties of merchantability
 *      and fitness.  In no event shall Vanderbilt University be liable for
 *      any special, indirect or consequential damages or any damages
 *      whatsoever resulting from loss of use, data or profits, whether
 *      in an action of contract, negligence or other tortious action,
 *      arising out of or in connection with the use or performance of
 *      this software.
 * 
 */-->
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" horizontalGap="2"
   width="100%" height="100%" horizontalAlign="left" verticalAlign="middle" horizontalScrollPolicy="off">
  <mx:Script>
   <![CDATA[
		
	    import constants.ArtworkFilters;
		import constants.Color;
		import constants.Line;
		import constants.Size;
		import flash.display.Bitmap;
		import generics.Button_X;
		import generics.ComponentIcons;
		import mx.controls.Button;
		import mx.controls.Image;
		import mx.core.Container;
		import mx.core.FlexSprite;
		import mx.core.SpriteAsset;
		import mx.core.UIComponent;
		private var _data:Object = new Object;
		//private static const KEY:String = "rating";
		public var fid:String = "";
		//private var level:int = 0;
     
		private var _icon:Image;
		
		override protected function createChildren():void {
			super.createChildren();
			_icon = new Image();
			this.addChild(_icon);
			//var w:Number = 13.0 * MM;
			//var h:Number = 13.0 * MM;		
		}
		
		public function changeIcon(newIconID:String):void {
			if (newIconID == null || newIconID == "") { return; }
			var svgAsset:SpriteAsset;
			svgAsset = ComponentIcons.pickImage(newIconID);
			if (svgAsset == null) {
				var path:String = "./assets/" + newIconID;
				_icon.autoLoad = true;
				_icon.source = path;
			} else {
				_icon.source = svgAsset;
			}
			
			var MM:Number = Size.MM;
			_icon.width = 6.0 * MM;
			_icon.height = 6.0 * MM;
		}
		
		public function get value():String { 
			if (data != null) {
				return _data[fid];
			}
			return "";
		}
		
		public function get text():String {
			return this.value;
		}
	     
		override public function set data(value:Object):void {
			_data = value;
			if (fid != "") {
				changeIcon(value[fid].toString());
			}
		}
     
		override public function get data():Object {
			return _data;
		}
     
		override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {			
			//trace("EXPAND BUTTON LATER: " + _data.showExpandButton + "   DATA: " + _data[fid]);
			
			super.updateDisplayList(unscaledWidth, unscaledHeight);
		}
     
		override public function invalidateDisplayList():void {
			super.invalidateDisplayList();
		}
		
		override protected function commitProperties():void {
			super.commitProperties();
		}
   ]]>
 </mx:Script>
</mx:HBox>
